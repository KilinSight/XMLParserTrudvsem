{% extends 'base.html.twig' %}


{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Remove the navbar's default margin-bottom and rounded borders */
        .navbar {
            margin-bottom: 0;
            border-radius: 0;
        }

        /* Add a gray background color and some padding to the footer */
        footer {
            background-color: #f2f2f2;
            padding: 25px;
        }

        /* Hide the carousel text when the screen is less than 600 pixels wide */
        @media (max-width: 600px) {
            .carousel-caption {
                display: none;
            }
        }
        input {
            width: 50%;
            z-index: -10;
            margin: 8px 0 8px 0;
        }

        .c-regions {
            position: relative;
        }

        .c-regions__container {
            position: absolute;
            background-color: #eeeeee;
            width: 100%;
            list-style: none;
            padding: 0;
            border: 1px solid #999999;
            border-bottom: none;
            top: 35px;
            left: 0;
            display: none;
            max-height: 350px;
            overflow: auto;
            z-index: 10;
            font-size: 14px;
            line-height: 1.42857143;
            color: #666666;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);

        }

        .c-regions__container--active {
            display: block;
        }

        .c-regions__container li{
            height: 26px;
            line-height: 26px;
            border-bottom: 1px solid #dddddd;
        }

        .c-regions__container li:hover{
            background-color: #dddddd;
        }
        h5 {
            margin-top: 25px;
            margin-bottom: 25px;
            font-size: 18px;
        }

        .get-regions {
            margin: 50px;
        }

        .both-col {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .left-col {
            width: 35%;
        }

        .right-col {

            height: 1000px;
            max-height: calc(100vh - 300px);
            /*overflow-y: scroll;*/
            width: 55%;
            display: flex;
            justify-content: center;
            /*align-items: center;*/
            background-color: #eeeeee;
            border-radius: 4px;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        }

        .right-col h2 {
            margin: 0 auto;
        }

        .content {
            min-height: calc(100vh - 111px);

        }

        .content {
            min-width: 98%;
            max-width: calc(100% - 100px);
        }

        .iframe{
            min-width: 98%;
            max-width: calc(100% - 100px);
        }



        @media screen and (max-width: 1200px) {
            .both-col {
                justify-content: center;
            }

            .left-col {
                width: 95%;
            }
            .right-col {
                margin-top: 75px;
                margin-bottom: 50px;
                min-height: 300px;
                width: 95%;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <body>

    <div class="container content text-center">
        <div class="row">
            <div class="col-md-12">
                <div class="panel-body">
                    <h1><span>Обработка открытых данных с сайта trudvsem.ru</h1>
                </div>
            </div>
        </div>
            <div class="row both-col">
            <div class="left-col">
                <form action="/get_results" method="POST" class="search-form">
                    <h5>Введите параметры поиска:</h5>
                    <div class="c-regions">
                        <input  autocomplete="off" class="c-regions__input form-control" type="text" id="searchQuery" name="searchQuery" placeholder="Введите запрос">
                        <ul class="c-regions__container">
                        </ul>
                    </div>
                    <input class="form-control" type="text" id="vacancy" placeholder="Введите вакансию">
                    <input class="form-control" type="text" id="region" placeholder="Введите регион">
                    <input class="form-control" type="text" id="town" placeholder="Введите город">
                    <h5>Введите диапазон заработной платы:</h5><input class="form-control" type="text" name="money1" id="money1" placeholder="От">
                    <input  class="form-control" type="text" id="money2" name="money2" placeholder="До">
                    <button class="btn btn-default" type="button" id="search_button" value="1">Поиск</button>
                </form>
            </div>
                <div class="right-col" id="result_area">
                    {#<h2>Выберите параметры в меню</h2>#}
                    {#<div class="vac-title">Web-разработчик</div>#}
                    <iframe class="iframe" src="https://trudvsem.ru/vacancy/card/313171916400040/1693bbb6-28e2-11e7-bdb6-037acc02728d" >  </iframe>
                </div>

            </div>
            <div class="container col-sm-12">
                <div class="row get-regions">
                    <button class="btn btn-success btn-lg" id="update_db" type="button"> Обновить базу</button>
                    <button class="btn btn-success btn-lg" id="get_raw_xml" type="button"> Прочитать xml</button>
                    <label for="update_db">(операция занимает около 30 минут)</label>
                </div>
            </div>
        </div>
    </div>

    </body>
    </html>

{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        var progress = {'done':false, 'offset':0};
        var count = 1;
        var timeout;
        var $regionDone = false;
        var $profDone = false;
        var $industryDone = false;
        var $organizationDone = false;
        var $vacancyDone = false;
        var $cvDone = false;
        var tmp = false;
        var step = 0;
        var namesArray = {
            0:'region',
            1:'prof',
            2:'industry',
            3:'organization',
            4:'cv'
        };

        var urlsArray = {
            0 : 'http://opendata.trudvsem.ru/7710538364-regions/data-20180208T044857-structure-20161130T143000.xml',
            1 : 'http://opendata.trudvsem.ru/7710538364-professions/data-20180206T053855-structure-20161130T143000.xml',
            2 : 'http://opendata.trudvsem.ru/7710538364-industries/data-20180206T053855-structure-20161130T143000.xml',
            3 : 'http://opendata.trudvsem.ru/7710538364-organizations/data-20180206T053855-structure-20161130T143000.xml',
            4 : 'http://opendata.trudvsem.ru/7710538364-cv/data-20180213T050836-structure-20161130T143000.xml'
        };
        var sendAjaxVacancies = function (progress) {

            step = 3;
            // truncateDB();
            // processDB(progress,urlsArray,namesArray);
            reProcessVacancy().then(function(result){
                return processDB(progress,urlsArray,namesArray);
            });

            // .then(function(result){
            //     return processDB(progress,urlsArray,namesArray);
            // });
            //     .then(function(result){
            //     return processDB(progress,urlsArray,namesArray);
            // }).then(function(result){
            //     return processDB(progress,urlsArray,namesArray);
            // }).then(function(result){
            //     return processDB(progress,urlsArray,namesArray);
            // }).then(function(result){
            //     return processDB(progress,urlsArray,namesArray);
            // });
        };


        function processDB(progress,urlsArray,namesArray){
            $.ajax({
                url: Routing.generate('write_to_db'),
                data: {
                    url: urlsArray[step],
                    name: namesArray[step],
                    limit: 100000000,
                    offset: progress.offset
                },
                success: function (arr) {
                    if (arr.done){
                        progress = {'done':false, 'offset':0};
                        step++;
                    }
                }
            });
        }

        function reProcessVacancy(){
            $.ajax({
                url: Routing.generate('get_vacancies'),
                success: function (data) {
                    if (data.success){
                        console.log('OK');
                    }else{
                        console.log('FUCK');
                    }
                }
            });
        }

        var getRawXml = function(){
            $.ajax({
                url: Routing.generate('get_raw_xml'),
                data: {
                    // url:itemUrl,
                    // name: indexUrl,
                    url: urlsArray[4],
                    name: namesArray[4],
                    limit: 100000000,
                    offset: 0
                },
                success: function (arr) {
                }
            });
        };

        var truncateDB = function(){
            $.ajax({
                url: Routing.generate('truncate_db'),
                success: function(){
                    console.log(success);
                }
            });
        };

        $('#update_db').on('click',function(){
            sendAjaxVacancies(progress);
        });

        $('#get_raw_xml').on('click',function(){
            getRawXml();
        });

        $(document).on('click', '#search_button',function(){
            $.ajax({
                url: Routing.generate('search_vacancies'),
                data:{
                  region: $('#region').val(),
                  vacancy: $('#vacancy').val(),
                },
                success:function(data) {
                    $('#result_area').html(' ');
                    if (data.success){
                        $('#result_area').append('Racoon Poloscoon');
                    }else{
                        $('#result_area').append('Even your mother');
                    }
                }
            });
        });

        $(document).ready(function (){
            var arrRegions =[];
            $.ajax({
                url: Routing.generate('api_regions'),
                success:function(data) {
                    var regions = JSON.parse(data);
                    console.log(regions.region[0].name);
                    regions.region.map(function(item,key){
                        // console.log(item);
                        arrRegions.push({"name": item.name, "code": item.code });
                    });
                    sortRegions();
                }
            });

            var arrSort = arrRegions.slice();

            function sortRegions() {
                arrRegions.sort(function (a, b) {
                    return a.name.localeCompare(b.name);
                });
                showData(arrRegions);
            }

            $('.c-regions__input').focus(function () {
                $('.c-regions__container').addClass('c-regions__container--active');
            });


            $('.c-regions__input').blur(function () {
                setTimeout(function() {
                    $('.c-regions__container').removeClass('c-regions__container--active');
                }, 200)
            })

            $('.c-regions__input').keyup(function () {
                var inputValue = $('.c-regions__input').val().toUpperCase(),
                    container = $('.c-regions__container');
                if (inputValue == false) {
                    arrSort = arrRegions.slice();
                    showData(arrRegions);
                }
                else {
                    container.empty();
                    arrSort = [];
                    arrRegions.forEach(function(elem) {

                        if ((elem.name.toUpperCase().indexOf(inputValue) >= 0) || ((''+elem.code).toUpperCase().indexOf(inputValue)) >= 0) {
                            arrSort[arrSort.length] = {
                                name: elem.name,
                                code: elem.code
                            };
                        }
                    })
                    showData(arrSort);
                }
            });


            function showData (arr) {
                var container = $('.c-regions__container'),
                    html = [];

                container.empty();

                arr.forEach(function(value) {
                    html.push('<li data-id="'+ value.code +'">' + value.name + '</li>');
                });
                container.append(html);

                $('.c-regions__container li').click(function () {
                    var regionId = $(this).data('id'),
                        regionName = $(this).html();
                    $('.c-regions__input').attr('data-id',regionId);
                    $('.c-regions__input').val(regionName);

                })
            }
        });

    </script>
{% endblock %}

